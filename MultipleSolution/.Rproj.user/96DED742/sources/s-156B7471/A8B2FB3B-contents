source("beta_trans.R")
source("equi_corr.R")

beta_store = beta
ind = equi_index(X, y, lambda, beta)
X = X[, ind]
beta = beta[ind]

n = nrow(X)
d = ncol(X)
A = rbind(cbind(X, -X), rep(1, 2*d), cbind(X, matrix_0))
b = rbind(  X %*% beta, sum(abs(beta)), X %*% beta)
v_par = pracma::pinv(A) %*% b
V = pracma::nullspace(A)

# MCMC sample
npoints = 20000
P = volesti::Hpolytope(A = -V, b = as.vector(v_par + abs(rnorm(2 * d, sd = 0.00001))))
random_walk = list(
  walk = 'BiW',
  walk_length = 100
)
alpha = volesti::sample_points(P, n = npoints, random_walk = random_walk)
x = v_par %*%  matrix(1, nrow = 1, ncol = npoints) + V %*% alpha
soln = t(apply(x, 2, beta_tight))
result = matrix(1, nrow = npoints, ncol = 1) %*% t(as.matrix(beta_store))
result[, ind] = soln

loc = seq(from = 0, to = 0.25, by = 0.01)
path = 0.125 - 0.5 * loc

ggplot(data.frame(coord2 = result[,2], coord3 = result[,3]),
       aes(x = coord2, y = coord3)) +
  geom_point(alpha = 0.5) +
  xlim(0, 1) + 
  ylim(0, 1) +
  geom_abline(slope = -0.5, intercept = 0.125, col = 'blue')

plot(result[,2], result[,3], xlim = c(0,1), ylim = c(0,1))


plot(result[,2], result[,4])
plot(result[,3], result[,4])

scatterplot3d(x = alpha[1,], y = alpha[2,], z = alpha[3,])
